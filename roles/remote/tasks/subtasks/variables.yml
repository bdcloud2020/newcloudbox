##########################################################################
# Title:         Cloudbox: Remote | Variable Tasks                       #
# Author(s):     desimaniac                                              #
# URL:           https://github.com/cloudbox/cloudbox                    #
# --                                                                     #
#         Part of the Cloudbox project: https://cloudbox.works           #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Mount Types
################################

- name: Variables | Set 'plexdrive4' mount variables
  set_fact:
    mount_types: ['plexdrive4']
    service_files: ['plexdrive4.service']
    mount_paths: ['/mnt/remote']
  when: (mounts.remote | lower == 'plexdrive4')
    or ((mounts.remote | lower == 'plexdrive') and ((ansible_memory_mb.real.total/1024)|round(0,'ceil')|int < 8))

- name: Variables | Set 'plexdrive5' mount variables
  set_fact:
    mount_types: ['plexdrive5']
    service_files: ['plexdrive5.service']
    mount_paths: ['/mnt/remote']
  when: (mounts.remote | lower == 'plexdrive5')
    or ((mounts.remote | lower == 'plexdrive') and ((ansible_memory_mb.real.total/1024)|round(0,'ceil')|int >= 8))

- name: Variables | Set 'rclone_cache' mount variables
  set_fact:
    mount_types: ['rclone_cache']
    service_files: ['rclone_cache.service']
    mount_paths: ['/mnt/remote']
  when: (mounts.remote | lower == 'rclone_cache')

- name: Variables | Set 'rclone_vfs' mount variables
  set_fact:
    mount_types: ['rclone_vfs']
    service_files: ['rclone_vfs.service','rclone_vfs_primer.service','rclone_vfs_primer.timer']
    mount_paths: ['/mnt/remote']
  when: (mounts.remote | lower == 'rclone_vfs')

- name: Variables | Set 'mount_types_is_defined' variable
  set_fact:
    mount_types_is_defined: "{{ (mount_types is defined) and
                                (mount_types is not none) and
                                (mount_types | trim | length > 0) }}"

- name: Variables | Fail when no valid remote mount type is specified.
  fail:
    msg: "'{{ mounts.remote }}' is not a valid remote mount type."
  when: not mount_types_is_defined and not feeder_mount_is_enabled

################################
# Feeder
################################

- name: Variables | Add feeder entries to variable
  block:

  - name: Variables | Add 'feeder' to 'mount_types' variable
    set_fact:
      mount_types: "{{ mount_types + ['feeder'] }}"

  - name: Variables | Add '/mnt/feeder' to 'mount_paths' variable
    set_fact:
      mount_paths: "{{ mount_paths + ['/mnt/feeder'] }}"

  - name: Variables | Add 'feeder.service' to 'service_files' variable
    set_fact:
      service_files: "{{ service_files + ['feeder.service'] }}"

  when: feeder_mount_is_enabled

################################
# Service Files
################################

- name: Variables | Set 'service_files_stat' variable
  stat:
    path: "/etc/systemd/system/{{ item }}"
  register: service_files_stat
  loop: "{{ service_files }}"

- name: Variables | Create empty 'service_files_temp' variable
  set_fact:
    service_files_temp: []

- name: Variables | Build 'service_files_temp' variable
  set_fact:
    service_files_temp: "{{ service_files_temp + [ item.item ] }}"
  when: item.stat.exists
  loop: "{{ service_files_stat.results }}"

- name: Variables | Set new 'service_files' variable
  set_fact:
    service_files: "{{ service_files_temp }}"
