#########################################################################
# Title:         Cloudbox: Cloudplow | Settings Task                    #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Settings | Import Plex Auth Token role
  import_role:
    name: plex_auth_token
  when: plex_account_is_enabled

- name: Settings | Check if 'config.json' exists
  stat:
    path: "{{ cloudplow_config_path }}"
  register: cloudplow_config

- name: Settings | New 'config.json' tasks
  block:

  - name: Settings | Import 'config.json'
    template:
      src: config.json.j2
      dest: "{{ cloudplow_config_path }}"
      owner: "{{ user.name }}"
      group: "{{ user.name }}"
      mode: 0775
      force: yes

  when: not cloudplow_config.stat.exists

- name: Settings | Existing 'config.json' tasks
  block:

  - name: Settings | Install required packages
    apt:
      state: present
      name:
        - jq
        - moreutils

  - name: Settings | Update Rclone config path 'config.json'
    shell: |
      jq '.core.rclone_config_path = "{{ rclone_config_path }}"' "{{ cloudplow_config_path }}" | sponge "{{ cloudplow_config_path }}"
    become: yes
    become_user: "{{ user.name }}"

  - name: Settings | Update NZBGet credentials in 'config.json'
    shell: |
      jq '.nzbget.url = "{{ nzbget_web_url_with_login }}"' {{ cloudplow_config_path }} | sponge {{ cloudplow_config_path }}
    become: yes
    become_user: "{{ user.name }}"

  - name: Settings | Update Plex URL in 'config.json'
    shell: |
      jq '.plex.url = "{{ plex_web_url }}"' {{ cloudplow_config_path }} | sponge {{ cloudplow_config_path }}
    become: yes
    become_user: "{{ user.name }}"

  - name: Settings | Update Plex Token in 'config.json'
    shell: |
      jq '.plex.token = "{{ plex_auth_token | default('') }}"' {{ cloudplow_config_path }} | sponge {{ cloudplow_config_path }}
    become: yes
    become_user: "{{ user.name }}"

  when: cloudplow_config.stat.exists

- name: Settings | Upgrade 'config.json'
  shell: "{{ cloudplow_script_path }} update_config"
  become: yes
  become_user: "{{ user.name }}"
  ignore_errors: yes
